<template>
  <div class="page" data-name="home">
    <!-- Top Navbar -->
    <div class="navbar navbar-large">
      <div class="navbar-bg" style="background-color: #1a1c19;"></div>
      <div class="navbar-inner">
        <div class="title sliding"><b>billable</b></div>
        <div class="title-large">
          <div class="title-large-text"><b>billable</b></div>
        </div>
      </div>
    </div>

    <!-- Scrollable page content-->
    <div class="page-content">
      
      <div class="flex" style="margin-left: 20px; margin-right: 10px; gap: 6px">
        <a class="button button-tonal" style="width: fit-content;" id="updateGPSBtn"><i class="f7-icons">map_pin_ellipse</i></a>
        <a href="/search/" class="button button-tonal" style="width: 77%;">Search</a>
      </div>

      <div class="block" id="notFound" style="display: none;">
        <h2>Location not found!</h2>
        <p>Try updating your location via the button above, or search for a congressperson manually.</p>
      </div>

      <div id="block"></div>

      <div class="list" id="homeList" style="display: flex; flex-wrap: wrap;">
    
      </div>
    
    </div>
  </div>
</template>
<script>
export default (props, { $update, $, $f7, $on, $onBeforeMount, $onMounted, $onBeforeUnmount, $onUnmounted }) => {
  $on('pageInit', () => {
    document.getElementsByClassName("tab-link-highlight")[0].setAttribute('style', 'left: 0; width: 50%');

    document.getElementById("updateGPSBtn").addEventListener('click', () => {
      updateGPS();
    })

    if (localStorage.getItem('pos')) {
      let pos = JSON.parse(localStorage.getItem('pos'));
      let lat = pos.lat;
      let lon = pos.lon;
      let URL = `https://geocoding.geo.census.gov/geocoder/geographies/coordinates?x=${lon}&y=${lat}&benchmark=Public_AR_Current&vintage=Current_Current&format=json`;
      URL = `https://corsproxy.io/?${encodeURIComponent(URL)}`;
      fetch(URL)
        .then(res => res.json())
        .then(data => {
          console.log(data);
          let state = data.result.geographies['States'][0].STUSAB;
          let district = data.result.geographies['119th Congressional Districts'][0].BASENAME;

          document.getElementById("block").innerHTML = `<div class="block"><h2>${state} District ${district}</h2></div>`;

          let URL = `https://api.congress.gov/v3/member/${state}?api_key=Us5xtdcaVcWvau0ZUfp8z0qaYbnStBQSr3XD4uh9&format=json&currentMember=true&limit=100`;
          fetch(URL)
            .then(response => response.json())
            .then(data => {
              let results = data.members;
              for (let i = 0; i < results.length; i++) {
                  if (results[i].district && results[i].district != district) continue;
                  let name = results[i].name.split(", ").reverse().join(" ");
                  document.getElementById("homeList").innerHTML += `<a href="/person/${results[i].bioguideId}">
                  <div class="block" style="margin: 0">
                      <div class="card" style="margin-left: 0; margin-right: 0; width: 420px;">
                        <div class="card-content card-content-padding" style="padding-left: 20px; padding-bottom: 10px; padding-right: 0px;">
                          <div class="grid grid-cols-2" style="gap: 12px">
                            <div style="display: flex; flex-direction: column; justify-content: center;">
                              <h1 style="margin-bottom: 6px; color: ${results[i].partyName == "Democratic" ? 'rgb(133, 185, 253)' : '#ff3b30'}">${name}</h1>
                              <h1 style="margin-top: 0px; margin-bottom: 12px; display: flex; gap: 8px;"><span class="badge color-black">${results[i].terms.item[0].chamber == "House of Representatives" ? "House" : "Senate"}</span><span class="badge color-black">${state}</span>${results[i].district ? `<span class="badge color-black">District ${results[i].district}</span>` : ''}</h1>
                              <button class="button button-tonal">More</button>
                            </div>
                            <div>
                              <img src="${results[i].depiction.imageUrl}" style="border-radius: 12px; margin-bottom: 0; width: 175px; height: 219px;" />
                            </div>
                          </div>
                        </div>
                      </div>
                  </div>
                  </a>`;
              }              
            })
        })
    }

    else document.getElementById("notFound").style.display = 'block';
  })

  function updateGPS() {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(position => {
      localStorage.setItem('pos', JSON.stringify({ lat: position.coords.latitude, lon: position.coords.longitude }));
      window.location.reload();
  });
  } else {
    alert("Geolocation is not supported by this browser.");
  }
}

  return $render;
}
</script>